{"ast":null,"code":"var _jsxFileName = \"/home/faisal9878/Documents/cloudprint/React projects/crypto tracker/crypto-hunter/src/CryptoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst crypto = /*#__PURE__*/createContext();\n\nconst CryptoContext = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currency, setCurrency] = useState(\"INR\");\n  const [Symbol, setSymbol] = useState(\"₹\");\n  useEffect(() => {\n    if (currency === \"INR\") setSymbol(\"₹\");else if (currency === \"USD\") setSymbol(\"$\");\n  }, [currency]);\n  return /*#__PURE__*/_jsxDEV(crypto.Provider, {\n    value: {\n      currency,\n      Symbol,\n      setCurrency\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoContext, \"srXYqBVRB8LUuj/P1MzPdeOKxeg=\");\n\n_c = CryptoContext;\nexport default CryptoContext;\nexport const CryptoState = () => {\n  _s2();\n\n  return useContext(crypto); //HOOK\n};\n\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = CryptoState;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CryptoContext\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"sources":["/home/faisal9878/Documents/cloudprint/React projects/crypto tracker/crypto-hunter/src/CryptoContext.js"],"names":["React","createContext","useContext","useEffect","useState","crypto","CryptoContext","children","currency","setCurrency","Symbol","setSymbol","CryptoState"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;;AAEA,MAAMC,MAAM,gBAAGJ,aAAa,EAA5B;;AAEA,MAAMK,aAAa,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,GAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACb,QAAIK,QAAQ,KAAK,KAAjB,EAAwBG,SAAS,CAAC,GAAD,CAAT,CAAxB,KACK,IAAIH,QAAQ,KAAK,KAAjB,EAAwBG,SAAS,CAAC,GAAD,CAAT;AAC/B,GAHQ,EAGN,CAACH,QAAD,CAHM,CAAT;AAKD,sBACE,QAAC,MAAD,CAAQ,QAAR;AAAiB,IAAA,KAAK,EAAE;AAACA,MAAAA,QAAD;AAAWE,MAAAA,MAAX;AAAmBD,MAAAA;AAAnB,KAAxB;AAAA,cACIF;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfD;;GAAMD,a;;KAAAA,a;AAiBN,eAAeA,aAAf;AAEA,OAAO,MAAMM,WAAW,GAAG,MAAM;AAAA;;AAC9B,SAAOV,UAAU,CAACG,MAAD,CAAjB,CAD8B,CACC;AACjC,CAFM;;IAAMO,W;;MAAAA,W","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst crypto = createContext();\n\nconst CryptoContext = ({children}) => {\n\n   const [currency, setCurrency] = useState(\"INR\");\n   const [Symbol, setSymbol] = useState(\"₹\");\n\n   useEffect(() => {\n      if (currency === \"INR\") setSymbol(\"₹\");\n      else if (currency === \"USD\") setSymbol(\"$\");\n   }, [currency]);\n\n  return (\n    <crypto.Provider value={{currency, Symbol, setCurrency}}>\n       {children}\n    </crypto.Provider>\n  )\n}\n\nexport default CryptoContext;\n\nexport const CryptoState = () => {    \n   return useContext(crypto)      //HOOK\n}"]},"metadata":{},"sourceType":"module"}