{"ast":null,"code":"var _jsxFileName = \"/home/faisal9878/Documents/cloudprint/React projects/crypto tracker/crypto-hunter/src/CryptoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst crypto = /*#__PURE__*/createContext();\n\nconst CryptoContext = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currency, setCurrency] = useState(\"INR\");\n  const [Symbol, setSymbol] = useState(\"₹\");\n  return /*#__PURE__*/_jsxDEV(crypto.Provider, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoContext, \"NsOOX8DeTlbX+A5y/LS5prlBrjo=\");\n\n_c = CryptoContext;\nexport default CryptoContext;\nexport const CryptoState = () => {\n  _s2();\n\n  useContext(crypto);\n};\n\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = CryptoState;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CryptoContext\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"sources":["/home/faisal9878/Documents/cloudprint/React projects/crypto tracker/crypto-hunter/src/CryptoContext.js"],"names":["React","createContext","useContext","useState","crypto","CryptoContext","children","currency","setCurrency","Symbol","setSymbol","CryptoState"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;;AAEA,MAAMC,MAAM,gBAAGH,aAAa,EAA5B;;AAEA,MAAMI,aAAa,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,GAAD,CAApC;AAED,sBACE,QAAC,MAAD,CAAQ,QAAR;AAAA,cACIG;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAXD;;GAAMD,a;;KAAAA,a;AAaN,eAAeA,aAAf;AAEA,OAAO,MAAMM,WAAW,GAAG,MAAM;AAAA;;AAC9BT,EAAAA,UAAU,CAACE,MAAD,CAAV;AACF,CAFM;;IAAMO,W;;MAAAA,W","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst crypto = createContext();\n\nconst CryptoContext = ({children}) => {\n\n   const [currency, setCurrency] = useState(\"INR\");\n\n   const [Symbol, setSymbol] = useState(\"₹\")\n\n  return (\n    <crypto.Provider>\n       {children}\n    </crypto.Provider>\n  )\n}\n\nexport default CryptoContext;\n\nexport const CryptoState = () => {\n   useContext(crypto)\n}"]},"metadata":{},"sourceType":"module"}