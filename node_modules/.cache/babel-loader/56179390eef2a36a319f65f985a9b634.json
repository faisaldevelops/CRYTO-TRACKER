{"ast":null,"code":"var _jsxFileName = \"/home/faisal9878/Documents/cloudprint/React projects/crypto tracker/crypto-hunter/src/components/CoinsTable.js\",\n    _s = $RefreshSig$();\n\nimport { Container, createTheme, LinearProgress, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, ThemeProvider, Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { CoinList } from '../config/api';\nimport { CryptoState } from '../CryptoContext';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoinsTable = () => {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const history = useHistory();\n  const {\n    currency\n  } = CryptoState();\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const {\n      data\n    } = await axios.get(CoinList(currency));\n    setCoins(data);\n    setLoading(false);\n  };\n\n  console.log(coins);\n  useEffect(() => {\n    fetchCoins();\n  }, [currency]);\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\"\n      },\n      type: \"dark\"\n    }\n  });\n\n  const handleSearch = () => {\n    return coins.filter(coin => coin.name.toLowerCase().includes(search) || coin.symbol.toLowerCase().includes(search));\n  };\n\n  const makeStyles = makeStyles(() => ({}));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        style: {\n          margin: 18,\n          fontFamily: \"Montserrat\"\n        },\n        children: \"Cryptocurrency prices by Market Cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search For a Crypto Currency...\",\n        variant: \"outlined\",\n        style: {\n          marginBottom: 20,\n          width: \"100%\"\n        },\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n          style: {\n            backgroundColor: \"gold\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            style: {\n              backgroundColor: \"#EEBC1D\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map(head => /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"700\",\n                  fontFamily: \"Montserrat\"\n                },\n                align: head === \"Coin\" ? \"\" : \"right\",\n                children: head\n              }, head, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: handleSearch().map(row => {\n              const profit = row.price_change_percentage_24h > 0;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                onClick: () => history.push(`/coins/${row.id}`),\n                className: classes.row\n              }, row.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CoinsTable, \"ekigD04tVOiP1u/zR7HoYtrvfuo=\", true, function () {\n  return [useHistory];\n});\n\n_c = CoinsTable;\nexport default CoinsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinsTable\");","map":{"version":3,"sources":["/home/faisal9878/Documents/cloudprint/React projects/crypto tracker/crypto-hunter/src/components/CoinsTable.js"],"names":["Container","createTheme","LinearProgress","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","ThemeProvider","Typography","axios","React","useEffect","useState","CoinList","CryptoState","useHistory","CoinsTable","coins","setCoins","loading","setLoading","search","setSearch","history","currency","fetchCoins","data","get","console","log","darkTheme","palette","primary","main","type","handleSearch","filter","coin","name","toLowerCase","includes","symbol","classes","useStyles","textAlign","margin","fontFamily","marginBottom","width","e","target","value","backgroundColor","map","head","color","fontWeight","row","profit","price_change_percentage_24h","push","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,cAAjC,EAAiDC,UAAjD,EAA6DC,KAA7D,EAAoEC,SAApE,EAA+EC,SAA/E,EAA0FC,cAA1F,EAA0GC,SAA1G,EAAqHC,QAArH,EAA+HC,SAA/H,EAA0IC,aAA1I,EAAyJC,UAAzJ,QAA2K,mBAA3K;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMW,OAAO,GAAGR,UAAU,EAA1B;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAeV,WAAW,EAAhC;;AAEA,QAAMW,UAAU,GAAG,YAAY;AAC5BL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAY,MAAMjB,KAAK,CAACkB,GAAN,CAAUd,QAAQ,CAACW,QAAD,CAAlB,CAAxB;AAEAN,IAAAA,QAAQ,CAACQ,IAAD,CAAR;AACAN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACF,GAND;;AAQAQ,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU;AAEX,GAHQ,EAGN,CAACD,QAAD,CAHM,CAAT;AAKA,QAAMM,SAAS,GAAGjC,WAAW,CAAC;AAC5BkC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC,OADF;AAIPC,MAAAA,IAAI,EAAE;AAJC;AADmB,GAAD,CAA7B;;AASA,QAAMC,YAAY,GAAE,MAAM;AACxB,WAAOlB,KAAK,CAACmB,MAAN,CACJC,IAAD,IACAA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCnB,MAAjC,KACAgB,IAAI,CAACI,MAAL,CAAYF,WAAZ,GAA0BC,QAA1B,CAAmCnB,MAAnC,CAHK,CAAP;AAKD,GAND;;AAQA,QAAMtB,UAAU,GAAGA,UAAU,CAAC,OAAO,EAAP,CAAD,CAA7B;AAIA,QAAM2C,OAAO,GAAGC,SAAS,EAAzB;AAED,sBAAO,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEb,SAAtB;AAAA,2BACH,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEc,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AACA,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAC,EAAT;AAAaC,UAAAA,UAAU,EAAC;AAAxB,SADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,iCAAjB;AACA,QAAA,OAAO,EAAC,UADR;AAEA,QAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAC,EAAd;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAFP;AAGA,QAAA,QAAQ,EAAGC,CAAD,IAAM3B,SAAS,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV;AAHzB;AAAA;AAAA;AAAA;AAAA,cAPJ,eAaI,QAAC,cAAD;AAAA,kBAEIhC,OAAO,gBACL,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAE;AAACiC,YAAAA,eAAe,EAAE;AAAlB;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADK,gBAGL,QAAC,KAAD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAACA,cAAAA,eAAe,EAAE;AAAlB,aAAlB;AAAA,mCACE,QAAC,QAAD;AAAA,wBACG,CAAC,MAAD,EAAS,OAAT,EAAkB,YAAlB,EAAgC,YAAhC,EAA8CC,GAA9C,CAAmDC,IAAD,iBACjD,QAAC,SAAD;AACE,gBAAA,KAAK,EAAE;AACLC,kBAAAA,KAAK,EAAC,OADD;AAELC,kBAAAA,UAAU,EAAE,KAFP;AAGLV,kBAAAA,UAAU,EAAE;AAHP,iBADT;AAOE,gBAAA,KAAK,EAAEQ,IAAI,KAAK,MAAT,GAAkB,EAAlB,GAAuB,OAPhC;AAAA,0BASKA;AATL,iBAMOA,IANP;AAAA;AAAA;AAAA;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAmBE,QAAC,SAAD;AAAA,sBACGnB,YAAY,GAAGkB,GAAf,CAAoBI,GAAD,IAAQ;AAC1B,oBAAMC,MAAM,GAAGD,GAAG,CAACE,2BAAJ,GAAkC,CAAjD;AAEA,kCACE,QAAC,QAAD;AACE,gBAAA,OAAO,EAAE,MAAMpC,OAAO,CAACqC,IAAR,CAAc,UAASH,GAAG,CAACI,EAAG,EAA9B,CADjB;AAEE,gBAAA,SAAS,EAAEnB,OAAO,CAACe;AAFrB,iBAGQA,GAAG,CAACnB,IAHZ;AAAA;AAAA;AAAA;AAAA,sBADF;AAQD,aAXA;AADH;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AALN;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AA0DD,CAxGD;;GAAMtB,U;UAIaD,U;;;KAJbC,U;AA0GN,eAAeA,UAAf","sourcesContent":["import { Container, createTheme, LinearProgress, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, ThemeProvider, Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { CoinList } from '../config/api';\nimport { CryptoState } from '../CryptoContext';\nimport { useHistory } from 'react-router';\n\nconst CoinsTable = () => {\n   const [coins, setCoins] = useState([]);\n   const [loading, setLoading] = useState(false);\n   const [search, setSearch] = useState(\"\");\n   const history = useHistory();\n\n   const { currency } = CryptoState();\n\n   const fetchCoins = async () => {\n      setLoading(true);\n      const { data }  = await axios.get(CoinList(currency));\n      \n      setCoins(data)\n      setLoading(false);\n   }\n\n   console.log(coins);\n\n   useEffect(() => {\n     fetchCoins();\n     \n   }, [currency]);\n   \n   const darkTheme = createTheme({\n     palette: {\n       primary: {\n         main: \"#fff\",\n       },\n       type: \"dark\",\n     },\n   });\n\n   const handleSearch= () => {\n     return coins.filter(\n       (coin) => \n       coin.name.toLowerCase().includes(search) ||\n       coin.symbol.toLowerCase().includes(search)\n     );\n   };\n\n   const makeStyles = makeStyles(() => ({\n\n   }))\n\n   const classes = useStyles();\n\n  return <ThemeProvider theme={darkTheme}>\n      <Container style={{ textAlign: \"center\" }}>\n          <Typography variant=\"h4\" \n          style={{ margin:18, fontFamily:\"Montserrat\" }}\n          >\n            Cryptocurrency prices by Market Cap\n          </Typography>\n\n          <TextField label=\"Search For a Crypto Currency...\"  \n          variant=\"outlined\" \n          style={{marginBottom:20, width: \"100%\"}}\n          onChange={(e)=> setSearch(e.target.value)}\n          />\n\n          <TableContainer>\n            {\n              loading? (\n                <LinearProgress style={{backgroundColor: \"gold\"}} />\n              ): (\n                <Table>\n                  <TableHead style={{backgroundColor: \"#EEBC1D\"}}>\n                    <TableRow>\n                      {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) =>\n                        <TableCell\n                          style={{\n                            color:\"black\",\n                            fontWeight: \"700\",\n                            fontFamily: \"Montserrat\",\n                          }}\n                          key={head}\n                          align={head === \"Coin\" ? \"\" : \"right\"}\n                          >\n                            {head}\n                        </TableCell>\n                      )}\n                    </TableRow>  \n                  </TableHead>\n\n                  <TableBody>\n                    {handleSearch().map((row)=> {\n                      const profit = row.price_change_percentage_24h > 0;\n\n                      return (\n                        <TableRow\n                          onClick={() => history.push(`/coins/${row.id}`)}\n                          className={classes.row}\n                          key= {row.name}\n                        >\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              )\n            }\n          </TableContainer>\n      </Container>\n  </ThemeProvider>\n}\n\nexport default CoinsTable"]},"metadata":{},"sourceType":"module"}